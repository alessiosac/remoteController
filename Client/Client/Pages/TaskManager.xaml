<UserControl x:Class="Client.Pages.TaskManager"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Client.Pages"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <!-- per ora non uso -->
        <Style x:Key="EmptyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Background" Value="#00000000"/>
            <Setter Property="BorderBrush" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        Margin="{TemplateBinding Padding}" 
                        RecognizesAccessKey="True" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Name}" Value="">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- template for handle image and name -->
        <DataTemplate x:Key="prop1Template">
            <StackPanel Orientation="Horizontal" Margin="20,0,0,0" ToolTip="Double click for sending keystrokes">
                <Image Source="{Binding Icon}"  Name="ImageName" Height="36" Width="36" HorizontalAlignment="Stretch" VerticalAlignment="Top" Stretch="UniformToFill" Grid.Column="0"/>
                <!--textTrimming non funziona se colonna con lunghezza varibile-->
                <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="20,0,0,0" FontSize="14"/>
            </StackPanel>
        </DataTemplate>

        <!-- here page with program list-->
        <DataTemplate x:Key="CustomItemTemplate">
            <Grid x:Name="grid1">
                <ListView x:Name="lvPrograms" ItemsSource="{Binding List}" PreviewMouseDoubleClick="ToSendClick" IsSynchronizedWithCurrentItem="true" KeyDown="ToSendWithEnter" >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <!--color the in focus program-->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InFocus}" Value="True">
                                    <Setter Property="Background" Value="OrangeRed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View >
                        <GridView AllowsColumnReorder="false">
                            <GridViewColumn x:Name="col1"  Width="{Binding ElementName=helperField, Path=ActualWidth}"  CellTemplate="{StaticResource prop1Template}">
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Tag="Name" Click="lvUsersColumnHeader_Click" FontSize="13" FontFamily="Trebuchet MS">Program</GridViewColumnHeader>
                                </GridViewColumn.Header>
                            </GridViewColumn>
                            <GridViewColumn x:Name="col2" Width="{Binding ElementName=helperField1, Path=ActualWidth}" >
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Tag="% Time In Focus" Click="lvUsersColumnHeader_Click" FontFamily="Trebuchet MS" FontSize="13">% Time In Focus</GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Width="{Binding ElementName=col2, Path=ActualWidth}" TextAlignment="Center" Text="{Binding PercentageTimeInFocus, StringFormat=N2 , UpdateSourceTrigger=PropertyChanged}" ToolTip="Double click for sending keystrokes"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="col3" Width="{Binding ElementName=helperField2, Path=ActualWidth}" >
                                <GridViewColumn.Header>
                                    <GridViewColumnHeader Tag="InFocus" Click="lvUsersColumnHeader_Click" FontFamily="Trebuchet MS" FontSize="13">In Focus</GridViewColumnHeader>
                                </GridViewColumn.Header>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Width="{Binding ElementName=col3, Path=ActualWidth}" ToolTip="Double click for sending keystrokes">
                                            <CheckBox IsChecked="{Binding InFocus, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" HorizontalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>

                <!--This is the hidden helper Grid which does the resizing -->
                <Grid Visibility="Hidden">
                    <Grid.ColumnDefinitions>
                        <!--Width is bound to width of the first GridViewColumn -->
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="2*"/>
                        <!--Width is set to "Fill"-->
                        <ColumnDefinition Width="*"/>
                        <!--Correction Width-->
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>
                    <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
                    <Grid Grid.Column="0" x:Name="helperField"/>
                    <Grid Grid.Column="1" x:Name="helperField1"/>
                    <Grid Grid.Column="2" x:Name="helperField2"/>
                </Grid>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="CustomHeaderTemplate">
            <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Name}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Image Source="{Binding icon}"  x:Name="serverImage" Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="UniformToFill" />
                    <TextBlock Text="{Binding Name}" Margin="2,0,0,0" VerticalAlignment="Center" FontSize="13" FontFamily="Trebuchet MS" />
                    <Button Name="btnDelete" Margin="6,0,0,0" Height="13" Click="btnDelete_Click" BorderThickness="0" CommandParameter="{Binding Name}" VerticalAlignment="Top">
                        <Image Source="/Client;component/images/delete.png" Height="13" Width="13" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                </StackPanel>
                <Button Click="addServer" Background="#FFF71212" Style="{DynamicResource EmptyButtonStyle}">
                    <Image Source="{Binding icon}" Height="30" Width="30" HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="UniformToFill" ></Image>
                </Button>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="5" />
            <RowDefinition x:Name="lastRow" Height="2*"/>
        </Grid.RowDefinitions>
        <Label x:Name="label1" Content="Processes on the Hosts" FontFamily="Trebuchet MS" FontSize="25" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" >
            <TabControl x:Name="TabControl1" SelectionChanged="tabDynamic_SelectionChanged" ItemTemplate="{StaticResource CustomHeaderTemplate}"
                    ContentTemplate="{StaticResource CustomItemTemplate}">
            </TabControl>
        </Grid>
        <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch" />
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="18"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Label x:Name="LogDescription" Content="Activity Viewer:" FontFamily="Trebuchet MS" FontSize="12" Grid.Row="0" Margin="0" HorizontalContentAlignment="Left" Padding="20,0,0,0">
                <Label.Background>
                    <LinearGradientBrush EndPoint="0.4,1" StartPoint="0.4,0">
                        <GradientStop Color="#FFE9F4F5" Offset="0"/>
                        <GradientStop Color="#FF784949" Offset="1"/>
                    </LinearGradientBrush>
                </Label.Background>
            </Label>
            <RichTextBox x:Name="activityViewer" HorizontalAlignment="Stretch" IsReadOnly="True" AllowDrop="False" VerticalScrollBarVisibility="Auto" IsUndoEnabled="False" HorizontalScrollBarVisibility="Auto" Grid.Row="1">
                <RichTextBox.Resources>
                    <Style TargetType="{x:Type Paragraph}">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </RichTextBox.Resources>
            </RichTextBox>
        </Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF97BEBD" Offset="1" />
                <GradientStop Color="White" Offset="0" />
            </LinearGradientBrush>
        </Grid.Background>
    </Grid>
</UserControl>
